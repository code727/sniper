<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<context:annotation-config />
	<context:property-placeholder location="application-redis.properties" />

	<bean id="redisCommands" class="org.sniper.nosql.redis.spring.SpringRedisCommandsImpl" >
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="repositoryManager" ref="repositoryManager" />
		<property name="globalKeySerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="globalValueSerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="globalHashKeySerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="globalHashValueSerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property> 
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="enableTransactionSupport" value="true"/>
		<property name="connectionFactory" ref="redisConnectionFactory"/>
		<!-- 全局的键值序列化器，都存字符串 -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>
	
	<bean id="redisConnectionFactory" class="org.sniper.nosql.redis.connection.RedisMultipleConnectionFactory">
		<property name="targetConnectionFactories">     
	    	<map key-type="java.lang.String">     
		         <entry key="redis_master" value-ref="redis_master"/>     
		         <entry key="redis_slave" value-ref="redis_slave"/>     
	      	</map>     
   		</property>   
   		<property name="resolvedDefaultConnectionFactory" ref="redis_master" />  
	</bean>

	<bean id="redis_master" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.master.host}" />  
        <property name="port" value="${redis.master.port}" />  
		<property name="password" value="${redis.password}" />
        <property name="timeout" value="${redis.timeout}" />  
        <property name="database" value="${redis.default.db}" />
        <property name="usePool" value="true" />  
        <constructor-arg index="0" ref="jedisPoolConfig" />  
	</bean>
	
	<bean id="redis_slave" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.slave.host}" />  
        <property name="port" value="${redis.slave.port}" />  
		<property name="password" value="${redis.password}" />
        <property name="timeout" value="${redis.timeout}" />  
        <property name="database" value="${redis.default.db}" />
        <property name="usePool" value="true" />  
        <constructor-arg index="0" ref="jedisPoolConfig" />  
	</bean>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
        <property name="maxIdle" value="${redis.maxIdle}" />  
       	<property name="testOnBorrow" value="true" />
    </bean>  
    
    <bean id="repositoryManager" class="org.sniper.nosql.redis.DefaultRedisRepositoryManager">
		<property name="repositories">
			<map>
				<entry key="string" value-ref="string" />
				<entry key="json" value-ref="json" />
				<entry key="hessian" value-ref="hessian" />
			</map>
		</property>
	</bean>
	
	<bean id="string" class="org.sniper.nosql.redis.RedisRepository">
		<property name="keySerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
	</bean>
	
	<bean id="json" class="org.sniper.nosql.redis.RedisRepository">
		<property name="dbIndex" value="1" />
		<property name="keySerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.sniper.serialization.json.jackson.codehaus.CodehausJacksonSerializer" />
		</property>
	</bean>
	
	<bean id="hessian" class="org.sniper.nosql.redis.RedisRepository">
		<property name="dbIndex" value="2" />
		<property name="keySerializer">
			<bean class="org.sniper.serialization.jdk.StringSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.sniper.serialization.hessian.HessianSerializer" />
		</property>
	</bean>
	
	<!-- redis数据源切换实现
    <bean id="redisMultipleDataSourceAdvice" class="org.sniper.persistence.datasource.advice.MultipleDataSourceAdvice"> 
    	<property name="multipleDataSourceManager" ref="redisMultipleDataSourceManager" />
    </bean> 
     -->  
    
    <!-- redis数据源管理器
   	<bean id="redisMultipleDataSourceManager" class="org.sniper.persistence.datasource.manager.MethodAndMultipleDataSourceManager" >
    	<property name="methodPatternAndDataSourceName">
    		<map>    
				<entry key="get*" value="wokin_redis_slave" />  
		        <entry key="*" value="wokin_redis_master"/>
	      	</map>     
    	</property>
    </bean>
    -->
		
	<!--
	<aop:config>
		<aop:pointcut id="redisMultipleDataSourcePointcut" expression="execution(* org.snipersite.service.redis.*.*(..))" />
		<aop:advisor advice-ref="redisMultipleDataSourceAdvice" pointcut-ref="redisMultipleDataSourcePointcut" />
	</aop:config>
    -->
    
</beans>